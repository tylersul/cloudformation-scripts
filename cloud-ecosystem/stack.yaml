AWSTemplateFormatVersion: 2010-09-09
Description: A simple CloudFormation template
Mappings: 
  RegionMap: 
    us-east-1: 
      AMI: "ami-04d29b6f966df1537"
    us-west-1: 
      AMI: "ami-08d9a394ac1c2994c"
Resources:
    VPC:
      Type: AWS::EC2::VPC
      Properties:
          CidrBlock: 172.34.0.0/16                                  # Required
          EnableDnsHostnames: False
          Tags:
            - Key: "Name"
              Value: "Tyler-CF-VPC"
    InternetGateway:
      Type: AWS::EC2::InternetGateway
      Properties:
        Tags:
          - Key: "Name"
            Value: "Tyler-CF-IGW"
      DependsOn: VPC
    AttachGateway:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
        VpcId: !Ref VPC
        InternetGatewayId: !Ref InternetGateway
    Subnet1:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone: us-west-1a
        CidrBlock: 172.34.0.0/24
        VpcId: 
          Ref: VPC
        MapPublicIpOnLaunch: False
        Tags:
          - Key: "Name"
            Value: "Tyler-CF-Subnet1"
    Subnet2:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone: us-west-1c
        CidrBlock: 172.34.1.0/24
        VpcId: 
          Ref: VPC
        MapPublicIpOnLaunch: False
        Tags:
          - Key: "Name"
            Value: "Tyler-CF-Subnet2"
    # NATGateway:
    #   Type: AWS::EC2::NatGateway
    #   Properties:
    #     AllocationId: !GetAtt ElasticIPAddress.AllocationId
    #     SubnetId: !Ref Subnet1
    # ElasticIPAddress:
    #   Type: AWS::EC2::EIP
    #   Properties:
    #     Domain: VPC
    Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: tyler-cf-bucket 
        AccessControl: PublicRead
    WebServer1:
      Type: AWS::EC2::Instance
      Properties:
        ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
        InstanceType: t2.micro                                    # Default is m1.small
        # SubnetId:
        #   Ref: Subnet1
        SecurityGroups: 
          - Ref: ServerSecurityGroup
        Tags:
          - Key: "Name"
            Value: "Tyler-Cloudformation"
    WebServer2:
      Type: AWS::EC2::Instance
      Properties:
        ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
        InstanceType: t2.micro                                    # Default is m1.small
        SecurityGroups: 
          - Ref: ServerSecurityGroup
        Tags:
          - Key: "Name"
            Value: "Tyler-Cloudformation"
    ServerSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Example server SG using CloudFormation.
        SecurityGroupIngress:
          - CidrIp: 104.153.231.113/32
            FromPort: '80'
            IpProtocol: tcp
            ToPort: '80' 
# Outputs:
#     WebsiteURL:
#         Value: !GetAtt [Bucket, BucketName]
#         Description: URL for website hosted on S3